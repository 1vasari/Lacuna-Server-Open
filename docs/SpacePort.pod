=head1 Space Port Methods

Space Port is accessible via the URL C</spaceport>.

The Space Port is where all the ships you build will be docked once they have been built from the L<Shipyard>. You can dock twice as many ships as the level of the Space Port.

The list of methods below represents changes and additions to the methods that all L<Buildings> share.

=head2 view ( session_id, building_id )

This method is extended to include a list of docked ships.

 {
    "building" : { ... },
    "status" : { ... },
    "max_ships" : 8,
    "docks_available" : 4,
    "docked_ships" : {
        "probe" : 3,
        "cargo_ship" : 0,
        "spy_pod" : 1,
        "colony_ship" : 0,
        "terraforming_platform_ship": 0,
        "gas_giant_settlement_platform_ship" : 0,
        "mining_platform_ship" : 0,
        "smuggler_ship" : 1,
        "space_station" : 0,
    }
 }
 

=head2 view_ships ( session_id, building_id )

Shows you the ships that are working in the mining fleet, and available to work in the mining fleet.

 {
    "ships" : [
        {
            "name" : "CS4",
            "id" : "id-goes-here",
            "task" : "Mining",
            "speed" : 350,
            "hold_size" : 5600
            "type" : "cargo_ship",
        },
        ...
    ],
    "number_of_ships" : 13,
    "status" : { ... }
 }

=head3 session_id

A session id.

=head3 building_id

The unique id of the space port.


=head2 name_ship ( session_id, building_id, ship_id, name )

Set the name of a ship.

=head3 session_id

A session id.

=head3 building_id

The unique id for the space port.

=head3 ship_id

The unique id of the ship you want to name.

=head3 name

The name you want to give the ship. 1 to 30 characters. No profanity. No funky characters.



=head2 scuttle_ship ( session_id, building_id, ship_id )

Destroy a ship that you no longer need. It must be docked to scuttle it.

=head3 session_id

A session id.

=head3 building_id

The unique id for the space port.

=head3 ship_id

The unique id of the ship you want to destroy.


 
=head2 view_ships_travelling ( session_id, building_id, [ page_number ])

Returns a list of the ships that are travelling to or from this planet.

B<NOTE:> All inbound/outbound ships are shown regardless of which space port they will eventually land at.

 {
    "status" : { ... },
    "number_of_ships_travelling" : 30,
    "ships_travelling" : [
       {
           "id" : "id-goes-here",
           "type" : "probe",
           "date_arrives" : "01 31 2010 13:09:05 +0600",
           "from" : {
               "id" : "id-goes-here",
               "type" : "body",
               "name" : "Earth",
           },
           "to" : {
               "id" : "id-goes-here",
               "type" : "star",
               "name" : "Sol",
           }
       },
       ...
    ]
 }


=head3 session_id

A session id.

=head3 building_id

The unique id of the space port.

=head3 page_number

Defaults to 1. An integer representing which page of ships travelling to view. Each page shows 25 ships.




=head2 send_probe ( session_id, from_body_id, to_star )

Dispatches a probe from one of the space ports on a planet to a star. It will automatically detect which space ports on the planet have probes, if any, and pick one of them to dispatch the probe.

Returns status:

 {
    "probe" : {
        "date_arrives" : "01 31 2010 13:09:05 +0600"
    },
    "status" : { ... }
 }

Throws 1002.

=head3 session_id

A session id.

=head3 from_body_id

The unique id of the planet that should send the probe.

=head3 to_star

A hash reference that can contain one of three items to identify a star.

 { "star_name" : "Sol" }
 
 { "star_id" : "id-goes-here" }
 
 { "x" : 4, "y" : -3 }

=head4 star_name

A string with the star's name. Case insensitive, but will throw an exception for misspelling.

=head4 star_id

The unique id of the star.

=head4 x | y

A set of x,y coordinates to locate the star.




=head2 send_spy_pod ( session_id, from_body_id, to_body )

Dispatches a spy pod from one of the space ports on a planet to another body. It will automatically detect which space ports on the planet have spy pods, if any, and pick one of them to dispatch the spy pod. In order to send a spy pod you must also have an idle spy available.

B<NOTE:> If you want more control over which spies and ships are used, see the C<send_spies> method.

Returns status:

 {
    "spy_pod" : {
        "date_arrives" : "01 31 2010 13:09:05 +0600",
        "carrying_spy" : {
           "id" : "id-goes-here",
           "name" : "Jason Bourne",
        }
    },
    "status" : { ... }
 }

Throws 1002.

=head3 session_id

A session id.

=head3 from_body_id

The unique id of the planet that should send the ship.

=head3 to_body

A hash reference that can contain one of three items to identify a planet.

 { "body_name" : "Earth" }
 
 { "body_id" : "id-goes-here" }
 
 { "x" : 4, "y" : -3 }

=head4 body_name

A string with the body's name. Case insensitive, but will throw an exception for misspelling.

=head4 body_id

The unique id of the body.

=head4 x | y 

A set of x,y coords to locate the body.





=head2 send_colony_ship ( session_id, from_body_id, to_body )

Dispatches a colony ship from one of the space ports on a planet to another body. It will automatically detect which space ports on the planet have colony ships, if any, and pick one of them.  

Returns status:

 {
    "colony_ship" : {
        "date_arrives" : "01 31 2010 13:09:05 +0600"
    },
    "status" : { ... }
 }

Throws 1002.

=head3 session_id

A session id.

=head3 from_body_id

The unique id of the planet that should send the ship.

=head3 to_body

A hash reference that can contain one of three items to identify a planet.

 { "body_name" : "Earth" }
 
 { "body_id" : "id-goes-here" }
 
 { "x" : 4, "y" : -3 }

=head4 body_name

A string with the body's name. Case insensitive, but will throw an exception for misspelling.

=head4 body_id

The unique id of the body.

=head4 x | y

A set of x,y coords to locate the body.





=head2 send_mining_platform_ship ( session_id, from_body_id, to_body )

Dispatches a mining platform ship from one of the space ports on a planet to another body. It will automatically detect which space ports on the planet have mining platform ships, if any, and pick one of them.  You can only dispatch a mining platform ship to an asteroid.

Returns status:

 {
    "mining_platform_ship" : {
        "date_arrives" : "01 31 2010 13:09:05 +0600"
    },
    "status" : { ... }
 }

Throws 1002.

=head3 session_id

A session id.

=head3 from_body_id

The unique id of the planet that should send the ship.

=head3 to_body

A hash reference that can contain one of three items to identify a planet.

 { "body_name" : "Earth" }
 
 { "body_id" : "id-goes-here" }
 
 { "x" : 4, "y" : -3 }

=head4 body_name

A string with the body's name. Case insensitive, but will throw an exception for misspelling.

=head4 body_id

The unique id of the body.

=head4 x | y

A set of x,y coords to locate the body.




=head2 send_spies ( session_id, from_body_id, to_body, ship_id, spy_ids )

Sends one or more of spies to a planet using a selected ship.

 {
     "ship" : {
         "date_arrives" : "01 31 2010 13:09:05 +0600",
         "spies_sent" : ["id-goes-here","id-goes-here","id-goes-here"],     # should be identical to "spy_ids"
         "spies_not_sent" : ["id-goes-here","id-goes-here","id-goes-here"]  # should only contain something if you're cheating, or a spy dies/turns between RPC calls
     },
     "status" : { ... }
 }

=head3 session_id

A session id.

=head3 from_body_id

The unique id of the planet that should send the ship.

=head3 to_body

A hash reference that can contain one of three items to identify a planet.

 { "body_name" : "Earth" }
 
 { "body_id" : "id-goes-here" }
 
 { "x" : 4, "y" : -3 }

=head4 body_name

A string with the body's name. Case insensitive, but will throw an exception for misspelling.

=head4 body_id

The unique id of the body.

=head4 x | y

A set of x,y coords to locate the body.

=head3 ship_id

The unique id of the ship to send. See the C<get_spy_ships> method.

=head3 spy_ids

An array reference of spy ids to send. See the C<get_my_available_spies> method.





=head2 fetch_spies ( session_id, from_body_id, to_body, ship_id, spy_ids )

Sends a specified ship to fetch specified spies, and bring them back to C<from_body_id>.

B<NOTE:> If the spies are not Idle when the ship arrives, they will not be picked up.

 {
     "ship" : {
         "date_arrives" : "01 31 2010 13:09:05 +0600",
     },
     "status" : { ... }
 }

=head3 session_id

A session id.

=head3 from_body_id

The unique id of the planet that should send the ship.

=head3 to_body

A hash reference that can contain one of three items to identify a planet.

 { "body_name" : "Earth" }
 
 { "body_id" : "id-goes-here" }
 
 { "x" : 4, "y" : -3 }

=head4 body_name

A string with the body's name. Case insensitive, but will throw an exception for misspelling.

=head4 body_id

The unique id of the body.

=head4 x | y

A set of x,y coords to locate the body.

=head3 ship_id

The unique id of the ship to send. See the C<get_spy_ships> method.

=head3 spy_ids

An array reference of spy ids to send. See the C<get_my_available_spies> method.




=head2 get_available_spy_ships ( session_id, from_body_id )

Returns a list of ships capable of sending spies.

 {
     "status" : { ... },
     "ships" : [
         {
            "id" : "id-goes-here",
            "name" : "CS4",
            "hold_size" : 1100,
            "speed" : 400,
            "type" : "cargo_ship"
         },
         ...
     ]
 }

=head3 session_id

A session id.

=head3 from_body_id

The unique id of the planet that should send the ship.




=head2 get_available_spy_ships_for_fetch ( session_id, from_body_id )

Returns a list of ships capable of retrieving spies.

 {
     "status" : { ... },
     "ships" : [
         {
            "id" : "id-goes-here",
            "name" : "CS4",
            "hold_size" : 1100,
            "speed" : 400,
            "type" : "cargo_ship"
         },
         ...
     ]
 }

=head3 session_id

A session id.

=head3 from_body_id

The unique id of the planet that should send the ship.



=head2 get_my_available_spies ( session_id, on_body_id )

Returns a list of spies that are controlled by this empire and are on the specified body and are available for transport (assignment is Idle).

 {
   "spies" : [
      {
         "id" : "id-goes-here",
         "level" : 12,
         "name" : "Jack Bauer",
         "from" : {
            "id" : "id-goes-here",
            "name" : "Earth"
         },
      },
      ...
   ],
   "status" : { ... }
 }

=head3 session_id

A session id.

=head3 on_body_id

The unique id of the planet that the spies are on.



=cut

=head1 Space Port Methods

Space Port is accessible via the URL C</spaceport>.

The Space Port is where all the ships you build will be docked once they have been built from the L<Shipyard>. You can dock twice as many ships as the level of the Space Port.

The list of methods below represents changes and additions to the methods that all L<Buildings> share.

=head2 view ( session_id, building_id )

This method is extended to include a list of docked ships.

 {
    "building" : { ... },
    "status" : { ... },
    "docked_ships" : {
        "probe" : 3,
        "cargo_ship" : 0,
        "spy_pod" : 1,
        "colony_ship" : 0,
        "terraforming_platform_ship": 0,
        "gas_giant_settlement_platform_ship" : 0,
        "mining_platform_ship" : 0,
        "smuggler_ship" : 1,
        "space_station" : 0,
    }
 }
 
 
=head2 view_ships_travelling ( session_id, building_id, [ page_number ])

Returns a list of the ships that are travelling to or from this planet.

B<NOTE:> All inbound/outbound ships are shown regardless of which space port they will eventually land at.

 {
    "status" : { get_status() },
    "number_of_ships_travelling" : 30,
    "ships_travelling" : [
       {
           "id" : "id-goes-here",
           "ship_type" : "probe",
           "date_arrives" : "01 31 2010 13:09:05 +0600",
           "from" : {
               "id" : "id-goes-here",
               "type" : "body",
               "name" : "Earth",
           },
           "to" : {
               "id" : "id-goes-here",
               "type" : "star",
               "name" : "Sol",
           }
       },
       ...
    ]
 }


=head3 session_id

A session id.

=head3 building_id

The unique id of the space port.

=head3 page_number

Defaults to 1. An integer representing which page of ships travelling to view. Each page shows 25 ships.




=head2 send_probe ( session_id, from_body_id, to_star )

Dispatches a probe from one of the space ports on a planet to a star. It will automatically detect which space ports on the planet have probes, if any, and pick one of them to dispatch the probe.

Returns status:

 {
    "probe" : {
        "date_arrives" : "01 31 2010 13:09:05 +0600"
    },
    "status" : { get_status() }
 }

Throws 1002.

=head3 session_id

A session id.

=head3 from_body_id

The unique id of the planet that should send the probe.

=head3 to_star

A hash reference that can contain one of three items to identify a star.

 { "star_name" : "Sol" }
 
 { "star_id" : "id-goes-here" }
 
 { "x" : 4, "y" : -3, "z" : 5 }

=head4 star_name

A string with the star's name. Case insensitive, but will throw an exception for misspelling.

=head4 star_id

The unique id of the star.

=head4 x | y | z

A set of x,y,z coordinates to locate the star.




=head2 send_spy_pod ( session_id, from_body_id, to_body )

Dispatches a spy pod from one of the space ports on a planet to another body. It will automatically detect which space ports on the planet have spy pods, if any, and pick one of them to dispatch the spy pod. In order to send a spy pod you must also have an idle spy available. 

Returns status:

 {
    "spy_pod" : {
        "date_arrives" : "01 31 2010 13:09:05 +0600",
        "carrying_spy" : {
           "id" : "id-goes-here",
           "name" : "Jason Bourne",
        }
    },
    "status" : { get_status() }
 }

Throws 1002.

=head3 session_id

A session id.

=head3 from_body_id

The unique id of the planet that should send the ship.

=head3 to_body

A hash reference that can contain one of three items to identify a planet.

 { "body_name" : "Earth" }
 
 { "body_id" : "id-goes-here" }
 
 { "x" : 4, "y" : -3, "z" : 5, "orbit" : 3 }

=head4 body_name

A string with the body's name. Case insensitive, but will throw an exception for misspelling.

=head4 body_id

The unique id of the body.

=head4 x | y | z | orbit

A set of x,y,z coordinates and an orbit to locate the body.




=cut
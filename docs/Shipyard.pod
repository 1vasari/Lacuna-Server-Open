=head1 Ship Descriptions

Ship descriptions are bulky, and are the same every time. As such we've created a file you can download to include ship descriptions in your client. You should cache this file once you've downloaded and only get it again if it has changed.

 https://servername.lacunaexpanse.com/resources.json

=head1 Fleets

Ships with the same attributes can be built in bulk in a Shipyard. The fleet will appear once in your Shipyard
build queue but it will represent a quantity of ships.

=head1 Shipyard Methods

Shipyard is accessible via the URL C</shipyard>.

The shipyard is where you construct ships. However, there are pre-requisites, such as other buildings or university
level for certain ships. The higher the level of the shipyard, the faster your ships will be built.

The list of methods below represents changes and additions to the methods that all L<Buildings> share.


=head2 view_build_queue ( session_id, building_id, [page_number])

Retrieves what ships are being constructed at this shipyard.

 {
   "status" : { ... },
   "number_of_fleets_building" : 10,
   "cost_to_subsidize" :  30,
   "fleets_building" : [
     {
       "id" :             "1234",
       "type" :           "spy_pod",
       "type_human" :     "Spy Pod",
       "date_completed" : "01 31 2010 13:09:05 +0600",
       "quantity" :       "10"
     }
     ...
   ]
 }

The response gives the B<number_of_fleets_building> and the B<cost_to_subsidize>, note that the
cost is based on the total number of ships being constructed, not the number of fleets.

B<fleets_building> is an array of the fleets in the build queue sorted from first to complete
to last.

Note, no ships in a fleet will become available until all ships in the fleet have been completed.

Because of efficiency of scale, building a fleet of several ships is quicker than building the
same number of ships individually.


=head3 session_id

A session id.

=head3 building_id

The unique id of this shipyard.

=head3 page_number.

Defaults to 1. An integer representing the page of data to view. There are 25 items per page.
 



=head2 subsidize_build_queue ( session_id, building_id )

Will spend 1 essentia per ship to complete the current build queue immediately.

Returns B<view>

Throws 1011.

=head3 session_id

A session id.

=head3 building_id

The unique id of the Shipyard.

=head2 get_buildable ( session_id, building_id, [ tag ] )

Returns a list of ships that can be constructed and their costs, and if they're not buildable, 
gives a reason why not in the form of an exception.

 {
   "buildable" : {
     "probe" : {
       "type_human" :    "Probe",
       "can" :           1,
       "reason" :        null,
       "cost" : {
         "seconds" :       900,
         "food" :          1100,
         "water" :         1000,
         "energy" :        1200,
         "ore" :           1200,
         "waste" :         100,
       },
       "attributes" : {
         "speed" :         1000, # 100 roughly equals 1 star in 1 hour
         "hold_size" :     1000,
         "max_occupants" : 2,
         "combat" :        0,
         "stealth" :       1500,
         "berth_level" :   5
       },
       "tags" : [
         "Exploration",
         "Intelligence",
       ]
     },
        ...
   },
   "docks_available" :   7,
   "status" : { ... },
 }

The response gives a list of ships, whether the B<can> be build or not, and if not, the B<reason> it cannot
be built (an arrayref).

The B<cost> represents the cost of producing one ship. B<seconds> is the time it would take to produce one
ship, but due to efficiency of scale the cost reduces if you build a fleet of ships, the more ships in the
fleet, the quicker each one is built. 

B<docks_available> returns the number of remaining empty Spaceport docks available. You can't build more ships
that would fit in your docks.

B<tags> represent attributes about ships that can be used to filter them. The list is.

=over

=item Trade

=item Colonization

=item SupplyChain

=item WasteChain

=item Intelligence

=item Exploration

=item War

=item Mining

=back

=head3 session_id

A session id.

=head3 building_id

The unique id of the shipyard.

=head3 tag

An optional tag to limit the list of available ships to something shorter. If no tag is specified, 
then all ships will be displayed.

=over

=item Trade

Ships that can be used to carry resources between colonies.

=item Colonization

Ships used to get more planets.

=item Intelligence

Ships that deal with spies or intelligence gathering.

=item Exploration

Ships that allow the user to go out and explore the Expanse.

=item War

Ships that are used to attack or defend.

=item Mining

Ships that are used to gather resources from space.

=back





=head2 build_fleet ( session_id, building_id, type, [ quantity ] )

Adds ships to the build queue. 

Returns the same as B<view_build_queue>.

=head3 session_id

A session id.

=head3 building_id

The unique id of the shipyard.

=head3 type

A ship type. Get from C<get_buildable>.

=head3 quantity

An optional quantity, if left blank it defaults to 1 ship.

You may specify any number of ships subject to the following:-

You must have that number of Shipyard construction slots available.

You must have that number of Space Port docks available.

You must have the resources available to build the specified quantity of ships.

Note that by constructing a fleet of multiple ships means that construction is more efficient due to the
economy of scale, so the total time to construct each ship in the fleet is reduced accordingly. The more
ships, the quicker each ship is built.

Also note that by constructing a fleet, none of the ships become available until all ships in the fleet 
are completed.

=head2 build_ships ( session_id, options )

Adds ships to build queues. Returns only the empire status.

=head3 session_id

A session id.

=head3 options

A hash of options.  Keys are:

=over 4

=item type

A ship type. Get from C<get_buildable>.

=item quantity

An optional quantity.  If omitted, it defaults to 1, otherwise specify the
number of ships to build up to a maximum of 600.  You must have the shipyard
capacity, space port capacity, and the resources required to build the
specified quantity of ships.  For now, you must be able to build this quantity
as if it were all at the highest shipyard in your queue, which should only
be an issue if you're almost out of resources.

=item body_id

When selecting C<all> shipyards, can simply provide the body_id to save
the extra RPC call to look for all shipyards and select one.  At least one
of body_id and building_id must be provided.

=item building_id

Can be a single building ID of the shipyard, or an array of building IDs to
select which shipyards to use.  All buildings must belong to the same body.
If the C<body_id> is also set, all shipyards must be on that body.  At least
one of body_id and building_id must be provided.

=item autoselect

The shipyard autoselect mode.  By default, if this is not set, the mode
is to only use the shipyard(s) selected by building_id.

Can be one of:

=over 4

=item 1.

C<all>

Selects all shipyards on the current body, whether that was from body_id or
building_id(s).

=item 2.

C<higher>

Selects all shipyards on the current body, whose level is I<equal to or higher than>
the building_id passed in.  Cannot pass in multiple building_ids when
using this option.

=item 3.

C<only>

Selects all shipyards on the current body, whose level is I<only equal to>
the building_id passed in.  Cannot pass in multiple building_ids when
using this option.

=back

=back

=cut



=head1 Founding an empire.

When founding an empire the order of operations is first to C<create> the empire. Then optionally create a new L<Species> (default is human). Then finally call the C<found> method to set up the empire on it's new home planet.


=head1 Empire Methods

The following methods are available from C</empire>.




=head2 is_name_available ( name ) 

Returns a 1 if the name is available, or a throws an exception if it is not.

Throws 1000.

=head3 name

The name of the empire to search for.



=head2 logout ( session_id )

Ends a session. Returns 1.

Throws 1006.

=head3 session_id

A session id.



=head2 login ( name, password )

Returns a hash like the following after confirming the password matches the empire.

 {
    "session_id" : "xxx",
    "status" : { get_full_status() }
 }

Throws 1004 and 1005.

=head3 name

The name of the empire.

=head3 password

The password to authenticate to the empire.



=head2 create ( params ) 

Creates a new empire and then returns an empire_id.

 "nva7b810-9gna-11d1-80b4-h0a0p0p0e8n"
 
This is not the end of the story though. Now you must either create a L<Species> for this empire and then C<found> it, or just skip the species part and C<found> the empire.

Throws 1000, 1001, 1002.

=head3 params

A hash of parameters.

=head4 name

The name of the empire to create. Required.

=head4 password

The password to log in to the empire. Required.

=head4 password1

Retyping the password again. This must match C<password> to succeed.


=head2 found ( empire_id )

Set up an empire on it's new home world. Once this method is called, the species can no longer be modified. Returns a hash reference containing the session_id and the output from the C<get_full_status> method.

 {
    "session_id" : "7ba7b80d-91d1-b0b3-1111-10c04fd430cd",
    "status" : { get_full_status() }
 }

=head3 empire_id

The empire to found.



=head2 get_status ( session_id )

Fetches the empire's status hash that is returned with many methods, but performs no other operations than to get the status.

 {
    "server" : {
        "time" : "01 31 2010 13:09:05 +0600",
        "version" : 2.0604
    },
    "empire" : {
        "has_new_messages" : 3,
        "full_status_update_required" : 1
    }
 }

The C<server> section tells you about the status of the server. The C<empire> section tells you about the status of the logged in empire.

In the C<server> section, the C<version> is of particular importance. The version number takes the format of B<M.FFBB>. The B<M> part is the most important and stands for major version. The major version only changes if the API is changed in an incompatible way (no longer backwards compatible). The B<FF> part is the feature set version number. We've added features to the API, but not in an incompatible manner. The feature set version number is reset to C<00> if the major version number changes. The B<BB> part is the bug fix version number. It changes when we've fixed bugs within a release but haven't added any new features. The bug fix version number will be reset to C<00> if the feature set version number changes.

In the C<empire> section, the C<full_status_update_required> element lets you know that the client data is out of date, and need to be fetched again with a call to C<get_full_status>.

Throws 1002.

=head3 session_id

A session id.



=head2 get_full_status ( session_id )

Fetches the empire's status hash that is returned with many methods, but performs no other operations than to get the status.

 {
    "server" : {
        "time" : "01 31 2010 13:09:05 +0600",
        "version" : 2.0604,
        "star_map_size" : {
            "x" : [ -15, 15 ],
            "y" : [ -15, 15 ],
            "z" : [ -15, 15 ]
        }
    },
    "empire" : {
        "id" : "xxxx",
        "name" : "The Syndicate",
        "status_message" : "A spy's work is never done.",
        "home_planet_id" : "id-goes-here",
        "essentia" : 0,
        "happiness" : 119393
        "planets" : {
            "id-goes-here" : {
                "id" : "id-goes-here",
                "x" : -4,
                "y" : 10,
                "z" : 6,
                "star_id" : "id-goes-here",
                "orbit" : 3,
                "type" : "habitable planet",
                "name" : "Earth",
                "image" : "p13",
                "size" : 67,
                "water" : 900,
                "ore" : {
                    "gold" : 3399,
                    "bauxite" : 4000,
                    ...
                },
                "building_count" : 7,
                "happiness" : 3939,
                "happiness_hour" : 25,
                "food_stored" : 33329,
                "food_capacity" : 40000,
                "food_hour" : 229,
                "energy_stored" : 39931,
                "energy_capacity" : 43000,
                "energy_hour" : 391,
                "ore_hour" 284,
                "ore_capacity" 35000,
                "ore_stored" 1901,
                "waste_hour" : 933,
                "waste_stored" : 9933,
                "waste_capacity" : 13000,
                "water_stored" : 9929,
                "water_hour" : 295,
                "water_capacity" : 51050,
            },
            "another-id-goes-here" : {
                ...
            }
        }
    }
 }

The C<server> section tells you about the status of the server. The C<empire> section tells you about the status of the logged in empire.

In the C<empire> section there is a list of the empires planets, and the resources they are producing. Each resource has a C<_hour>, C<_stored>, and C<_capacity> except for happiness, which is missing C<_stored> because you can have an infinite amount of happiness. The C<_hour> elements refer the the amount of that resource that is produced by this planet per hour. The C<_stored> element refers to how much of the resource the planet has available right now. The C<_capacity> element refers to how much of the resource the planet can store at maximum. 

Throws 1002.

=head3 session_id

A session id.


=head2 view_profile ( session_id )

Provides a list of the editable properties of the current empire's profile. See also the C<edit_profile> and C<view_public_profile> methods.

 {
    "profile" : {
       "description" : "description goes here",
       "status_message" : "status message goes here",
       "medals" : {
           "building1" : {
               "name" : "Built Level 1 Building",
               "image" : "building1",
               "note" : "note about how this was achieved, if any, goes here",
               "date" : "01 31 2010 13:09:05 +0600",
               "public" : 1
           },
           ...
       }
    },
    "status" : { get_status() }
 }

=head3 session_id

A session id.




=head2 edit_profile ( session_id, profile )

Edits properties of an empire. Returns the C<view_profile> method. See also the C<view_profile> and C<view_public_profile> methods.

Throws 1005, 1009.

=head3 session_id

A session id.

=head3 profile

A hash reference of properties to be edited.

=head4 description

A description of the empire. Limited to 1024 characters and cannot contain < or >.

=head4 status_message

A message to indicate what you're doing, how you're feeling, or other status indicator. Limited to 100 characters, cannot be blank, and cannot contain @, &, <, >, or ;.

=head4 public_medals

An array reference of medal ids that the user wishes to display in the public profile.



=head2 view_public_profile (session_id, empire_id)

Provides a list of the data that's publicly known about this empire.

 {
    "profile" : {
        "id" : "empire-id-goes-here",
        "name" : "Lacuna Expanse Corp",
        "planet_count" : 1,
        "status_message" : "Looking for Essentia."
        "description" : "We are the original inhabitants of the Lacuna Expanse.",
        "medals" : {
            "building1" : {
                "name" : "Built Level 1 Building",
                "image" : "building1",
                "date" : "01 31 2010 13:09:05 +0600",
                "note" : null
            },
            ...
        },
        "date_founded" : "01 31 2010 13:09:05 +0600",
        "Species" : "Lacunan"
    },
    "status" : { get_status() }
 }
 
Throws 1002.

=head3 session_id

A session id.

=head3 empire_id

The id of the empire for which you'd like to retrieve the public profile.



=head2 find ( session_id, name )

Find an empire by name. Returns a hash reference containing empire ids and empire names. So if you searched for "Lacuna" you might get back a result set that looks like this:

 {
    "empires" : [
        {
            "id" : "id-goes-here",
            "name" : "Lacuna Expanse Corp"
        },
        {    
            "id" : "id-goes-here2",
            "name" : "Lacuna Pirates"
        }
    ],
    "status" : { get_status() }
 }
 
=head3 session_id

A session id.

=head3 name

The name your searching for. It's case insensitive, and partial names work fine. Must be at least 3 characters.



=head2 set_status_message ( session_id, message )

Sets the empire status message. Similar to what you might put on your Facebook wall, or in a tweet, but about your empire.

=head3 session_id

A session id.

=head3 message

A message to indicate what you're doing, how you're feeling, or other status indicator. Limited to 100 characters, cannot be blank, and cannot contain @, &, <, >, or ;.




=cut

=head1 Map Methods

These methods are accessible via the C</map> URL.

=head2 get_stars ( session_id, x1, y1, x2, y2, z )

Retrieves a chunk of the map and returns it as an array of hashes. B<Note:> Coordinates without a star will not be returned in the results.

 { 
    "stars" : [
        {
            "name"          : "Sol",
            "color"         : "yellow",
            "x"             : -41,
            "y"             : 27,
            "z"             : 14,
            "alignments"     : "self-ally"
        }.
        {
            "name"          : "X143S",
            "can_name"      : 0,
            "color"         : "green",
            "x"             : -42,
            "y"             : 27,
            "z"             : 14,
            "alignments"    : "unprobed"
        }
     ],
    "status" : { get_status() }
 }

The data you retrieve will allow you to draw a standard cartesian plane like the following. 

              y
              
              |
              |
     (-3,3)   |  (3,3)
              |
 -x ----------+---------- x
              |
     (-3,-3)  |  (3,-3)
              |
              |

             -y

What you're viewing is a slice of a 3D environment, much as if you cut an apple in half. 

The requested area can be no larger than 121 stars. Throws 1003 when the area is too large. 


=head3 session_id

A session id.

=head3 x1

The top left x coord.

=head3 y1

The top left y coord.

=head3 x2

The bottom right x coord.

=head3 y2

The bottom right y coord.

=head3 z

The z axis. There's no secondary z coordinate because you can only pull from one z axis at a time.



=head2 get_star_by_body ( session_id, body_id )

Returns the details about a star.

 {
    "star" : {
        "name" : "Sol",
        "id" : "yyyy",
        "x" : -3,
        "y" : 4,
        "z" : 77,
        "color" : "yellow",
        "alignments"     : "self-ally"
    },
    "status" : { get_status() }
 }

Throws 1002.

=head3 session_id

A session id.

=head3 body_id

The unique id for a body.



=head2 get_star_system ( session_id, star_id ) 

Returns an array of bodies and a hash about the star itself. The data structure looks like:

 {
    "star" : {
        "id" : "a0f7f6e5-c58e-4b9d-994b-5838c2feabe8",
        "name" : "Sol",
        "color" : "yellow",
        "x" : -39
        "y" : 44,
        "z" : 12
    },
    "bodies" : {
       "f9fe8bd3-bd09-4dc2-ba20-cf4e3b69e63a" : {
            "id" : "id-goes-here",
            "x" : -4,
            "y" : 10,
            "z" : 6,
            "star_id" : "id-goes-here",
            "orbit" : 3,
            "type" : "habitable planet",
            "name" : "Earth",
            "image" : "p13",
            "size" : 67,
            "water" : 900,
            "ore" : {
                "gold" : 3399,
                "bauxite" : 4000,
                ...
            },
            "alignment" : "none",   # can be 'none', 'ally','self', or 'hostile'
            
            --------- if you own the planet the data below will be included ---------
            
            "building_count" : 7,
            "happiness" : 3939,
            "happiness_hour" : 25,
            "food_stored" : 33329,
            "food_capacity" : 40000,
            "food_hour" : 229,
            "energy_stored" : 39931,
            "energy_capacity" : 43000,
            "energy_hour" : 391,
            "ore_hour" 284,
            "ore_capacity" 35000,
            "ore_stored" 1901,
            "waste_hour" : 933,
            "waste_stored" : 9933,
            "waste_capacity" : 13000,
            "water_stored" : 9929,
            "water_hour" : 295,
            "water_capacity" : 51050,
        }
    },
    "status" : { get_status() }
 }

The C<bodies> listing here shows public information about the body. For information about a planet that an empire owner can view, see L<Empire/"get_full_status">.

The C<ore> and C<water> parts of each body gives you an indication of how good the body is at producing those resources. The number is out of 10,000 possible. So a body that produces 9,000 bauxite would produce about 90% of capacity of bauxite. 

Throws 1002 and 1010.

=head3 session_id

A session id.

=head3 star_id

The unique id of the star you wish to retrieve system information for.



=head2 get_star_system_by_body ( session_id, body_id )

Returns the same output and throws the same errors as C<get_star_system>, but locates the system based upon a body_id rather than a star_id.

=head3 session_id

A session id.

=head3 body_id

The unique id of a body.





=head1 FAQ

These are common questions about this API.

=head2 What is a body?

A body is any object that orbits a star. In Lacuna terms this means a body is a habitable planet, gas giant planet, space station, or asteroid.

=cut

